// <auto-generated />
using System;
using AdvancedBusinessDev.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace AdvancedBusinessDev.Migrations
{
    [DbContext(typeof(ABDcontext))]
    [Migration("20240911001335_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdvancedBusinessDev.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_CLIENTE");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CNPJ");

                    b.Property<string>("SetorAtuando")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SETOR_ATUANDO");

                    b.Property<string>("TempAtuacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TEMP_ATUACAO");

                    b.HasKey("IdCliente");

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("EMPRESA_ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaId"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CEP");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CLIENTE_ID_CLIENTE");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CNPJ");

                    b.Property<string>("Especializacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ESPECIALIZACAO");

                    b.Property<int?>("ParceiroIdParceiro")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARCEIRO_ID_PARCEIRO");

                    b.Property<string>("TempAtuacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TEMP_ATUACAO");

                    b.HasKey("EmpresaId");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("ParceiroIdParceiro");

                    b.ToTable("EMPRESA", (string)null);
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.IA", b =>
                {
                    b.Property<int>("IdIa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_IA");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIa"));

                    b.Property<string>("BancoDados")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BANCO_DADOS");

                    b.Property<string>("Dados")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DADOS");

                    b.Property<int?>("EmpresaEmpresaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("EMPRESA_EMPRESA_ID");

                    b.Property<string>("HistRecomendacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("HIST_RECOMENDACAO");

                    b.Property<int?>("ParceiroIdParceiro")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARCEIRO_ID_PARCEIRO");

                    b.Property<string>("Tecnologias")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TECNOLOGIAS");

                    b.HasKey("IdIa");

                    b.HasIndex("EmpresaEmpresaId");

                    b.HasIndex("ParceiroIdParceiro");

                    b.ToTable("IA", (string)null);
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.Interface", b =>
                {
                    b.Property<int>("IdInterface")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_INTERFACE");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInterface"));

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CLIENTE_ID_CLIENTE");

                    b.Property<string>("Estilo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ESTILO");

                    b.Property<string>("Funcionalidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FUNCIONALIDADE");

                    b.Property<int?>("IaIdIa")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IA_ID_IA");

                    b.Property<string>("Linguas")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LINGUAS");

                    b.Property<string>("NomeInterface")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NM_INTERFACE");

                    b.HasKey("IdInterface");

                    b.HasIndex("IaIdIa");

                    b.ToTable("INTERFACE", (string)null);
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.Parceiro", b =>
                {
                    b.Property<int>("IdParceiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PARCEIRO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParceiro"));

                    b.Property<string>("AreaAtuando")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("AREA_ATUANDO");

                    b.Property<string>("AvaliacaoDesempenho")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("AVALIACAO_DESEMP");

                    b.Property<string>("NomeParceiro")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NM_PARCEIRO");

                    b.Property<string>("TipoParceria")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TP_PARCERIA");

                    b.HasKey("IdParceiro");

                    b.ToTable("PARCEIRO", (string)null);
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.Empresa", b =>
                {
                    b.HasOne("AdvancedBusinessDev.Models.Cliente", "Cliente")
                        .WithMany("Empresas")
                        .HasForeignKey("ClienteIdCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdvancedBusinessDev.Models.Parceiro", null)
                        .WithMany("Empresas")
                        .HasForeignKey("ParceiroIdParceiro");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.IA", b =>
                {
                    b.HasOne("AdvancedBusinessDev.Models.Empresa", "Empresa")
                        .WithMany("IAs")
                        .HasForeignKey("EmpresaEmpresaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdvancedBusinessDev.Models.Parceiro", "Parceiro")
                        .WithMany("IAs")
                        .HasForeignKey("ParceiroIdParceiro")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Empresa");

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.Interface", b =>
                {
                    b.HasOne("AdvancedBusinessDev.Models.IA", "IA")
                        .WithMany("Interfaces")
                        .HasForeignKey("IaIdIa")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IA");
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.Cliente", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.Empresa", b =>
                {
                    b.Navigation("IAs");
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.IA", b =>
                {
                    b.Navigation("Interfaces");
                });

            modelBuilder.Entity("AdvancedBusinessDev.Models.Parceiro", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("IAs");
                });
#pragma warning restore 612, 618
        }
    }
}
